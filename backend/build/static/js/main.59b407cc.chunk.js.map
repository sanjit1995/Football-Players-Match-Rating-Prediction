{"version":3,"sources":["SubComponents.js","App.js","serviceWorker.js","index.js"],"names":["RowInput","props","align","style","padding","type","name","value","onChange","onClick","width","disabled","checked","height","RoleInput","className","RowItem","fontFamily","fontSize","fontStretch","TableHeader","backgroundColor","color","tableLayout","border","values","map","idx","key","ResponseMessage","alert","DocumentHeader","justifyContent","position","top","keeper_specific_fields","player_specific_fields","all_fields","Object","keys","role","diving_save","goals_conceded","minutes_played","punches","saves","saves_inside_box","total_throws","accurate_passes","assists","chances_created","goals","total_shots","blocked_shots","shot_off_target","shot_on_target","accurate_long_balls","crosses","key_passes","long_balls","passes","touches","aerials_lost","aerials_won","clearances","dispossessed","dribbles_attempted","dribbles_succeeded","duels_lost","duels_won","fouls","interceptions","recoveries","tackles_attempted","tackles_succeeded","was_fouled","is_a_sub","was_subbed","yellow_card","red_card","rating","pop","console","log","length","keeper_fields","player_fields","i","indexOf","push","App","validInput","currentInput","state","keeper_count","fields","player_count","storeInput","event","target","setState","storeRadioInput","checkDataValidity","currentRow","parseInt","submitInput","rows","responseMessage","allRowsDisabled","keeperRowsDisabled","loading","removeCurrentInput","handleRemoveRow","tempRows","splice","validRowsData","enableRows","allRowsDisabledTemp","keeperRowsDisabledTemp","currentInputTemp","submitAll","body_data","JSON","stringify","screenLoading","fetch","method","cache","headers","body","then","response","status","Error","json","responseReceived","catch","error","error_message","message","resetScreen","this","margin","paddingTop","id","row","background","bottom","cursor","boxSizing","alignContent","marginTop","textAlign","min","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59b407cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n// Handles all active row input data\r\nexport const RowInput = (props) => (\r\n    <td align='center' style={{padding: \"2px\"}}>\r\n        <input\r\n            type={props.type}\r\n            name={props.name}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            onClick={props.onClick}\r\n            style={{ width: props.width, padding: \"4px\"}}\r\n            disabled={props.disabled}\r\n            checked={(props.value===\"Yes\")}\r\n            height={'100px'}\r\n        />\r\n    </td>\r\n);\r\n\r\n// Handles the Role Option\r\nexport const RoleInput = (props) => (\r\n    <td align='center'>\r\n        <div className={\"box\"} style={{padding: \"2px\"}}>\r\n            <select value={props.value} onChange={props.onChange}>\r\n                <option value=\"\">--- select ---</option>\r\n                <option value=\"Keeper\">Keeper</option>\r\n                <option value=\"Defender\">Defender</option>\r\n                <option value=\"Midfielder\">Midfielder</option>\r\n                <option value=\"Attacker\">Attacker</option>\r\n            </select>\r\n        </div>\r\n    </td>\r\n);\r\n\r\n// Handles all frozen rows data\r\nexport const RowItem = (props) => (\r\n    <td align='center' style={{padding: \"4px\", fontFamily: \"trebuchetMS\", fontSize: \"14px\", fontStretch: \"2px\"}}>\r\n        <span> {props.value} </span>\r\n    </td>\r\n);\r\n\r\n// Handles Table Header section in the web-page\r\nexport const TableHeader = (props) => (\r\n    <thead style={{ backgroundColor: 'gainsboro', color: 'black', tableLayout: \"auto\", width: \"180px\", border: \"auto\", fontSize: \"14px\"}}>\r\n        <tr>\r\n            {\r\n                props.values.map((value, idx) => (\r\n                    <th key={idx} className=\"text-center\" style={{ fontFamily: \"trebuchetMS\", fontSize: \"14px\", fontStretch: \"2px\"}}>\r\n                        {value}\r\n                    </th>\r\n                ))\r\n            }\r\n        </tr>\r\n    </thead>\r\n);\r\n\r\n// Handles Response Header Section in the Web-Page\r\nexport const ResponseMessage = (props) => (\r\n    <p align='center'>\r\n        {props.value ? alert(props.value) : \"\"}\r\n    </p>\r\n);\r\n\r\n// Handles Document Header section in the web-page\r\nexport const DocumentHeader = (props) => (\r\n    <div\r\n    style={{ fontSize:\"40px\", justifyContent:'center', color: 'white', backgroundColor: \"#3B3B38\", width: \"100%\", position: \"fixed\", top: \"0\"}}\r\n    align='center' >\r\n        {props.value}\r\n    </div>\r\n);","/* eslint-disable no-unused-vars */\r\n\r\n// Import necessary libraries\r\nimport React from 'react';\r\nimport {DocumentHeader, ResponseMessage, RoleInput, RowInput, RowItem, TableHeader} from './SubComponents.js';\r\nimport './App.css';\r\nimport ReactLoading from 'react-loading';\r\n\r\n// To reset the currentInput values\r\nfunction getInitialState() {\r\n    return {\r\n        name: \"\",\r\n        role: \"\",\r\n        diving_save: \"\",\r\n        goals_conceded: \"\",\r\n        minutes_played: \"\",\r\n        punches: \"\",\r\n        saves: \"\",\r\n        saves_inside_box: \"\",\r\n        total_throws: \"\",\r\n        accurate_passes: \"\",\r\n        assists: \"\",\r\n        chances_created: \"\",\r\n        goals: \"\",\r\n        total_shots: \"\",\r\n        blocked_shots: \"\",\r\n        shot_off_target: \"\",\r\n        shot_on_target: \"\",\r\n        accurate_long_balls: \"\",\r\n        crosses: \"\",\r\n        key_passes: \"\",\r\n        long_balls: \"\",\r\n        passes: \"\",\r\n        touches: \"\",\r\n        aerials_lost: \"\",\r\n        aerials_won: \"\",\r\n        clearances: \"\",\r\n        dispossessed: \"\",\r\n        dribbles_attempted: \"\",\r\n        dribbles_succeeded: \"\",\r\n        duels_lost: \"\",\r\n        duels_won: \"\",\r\n        fouls: \"\",\r\n        interceptions: \"\",\r\n        recoveries: \"\",\r\n        tackles_attempted: \"\",\r\n        tackles_succeeded: \"\",\r\n        was_fouled: \"\",\r\n        is_a_sub: \"No\",\r\n        was_subbed: \"No\",\r\n        yellow_card: \"No\",\r\n        red_card: \"No\",\r\n        rating: \"\"\r\n    };\r\n}\r\n\r\n//console.log(Object.keys(getInitialState()))\r\nconst keeper_specific_fields = [\r\n    \"diving_save\", \"goals_conceded\", \"punches\", \"saves\", \"saves_inside_box\", \"total_throws\"\r\n]\r\nconst player_specific_fields = [\r\n    \"chances_created\", \"goals\", \"crosses\", \"blocked_shots\"\r\n]\r\nconst all_fields = Object.keys(getInitialState())\r\nall_fields.pop()\r\nconsole.log(all_fields.length)\r\nconst keeper_fields = []\r\nconst player_fields = []\r\nfor (let i = 0; i < all_fields.length; i++) {\r\n    if (player_specific_fields.indexOf(all_fields[i]) === -1) {\r\n        keeper_fields.push(all_fields[i])\r\n    }\r\n    if (keeper_specific_fields.indexOf(all_fields[i]) === -1) {\r\n        player_fields.push(all_fields[i])\r\n    }\r\n}\r\nconsole.log(keeper_fields)\r\nconsole.log(player_fields)\r\n\r\n// Main App class, an ES6 class to define a component. Comes with a render() function which renders changes\r\n// automatically\r\nclass App extends React.Component {\r\n\r\n    // Constructor to define default parameters\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            rows: [],\r\n            currentInput: getInitialState(),\r\n            role: \"\",\r\n            allRowsDisabled: true,\r\n            keeperRowsDisabled: true,\r\n            responseMessage: \"\",\r\n            screenLoading: false,\r\n            responseReceived: false\r\n        };\r\n    }\r\n\r\n    // // Gets executed after the render() method\r\n    // componentDidMount() {\r\n    //   // To focus the selected element everytime on reloading the page\r\n    //   this.inputRef.current.focus()\r\n    //   console.log(this.inputRef)\r\n    // }\r\n\r\n    // To check if all the required parameters are entered\r\n    validInput = () => {\r\n        const {currentInput} = this.state;\r\n        if (this.state.role === \"\") {\r\n            return 0\r\n        }\r\n        else if (this.state.role === \"Keeper\") {\r\n            let keeper_count = 0\r\n            for (let fields of keeper_fields) {\r\n                console.log(currentInput[fields])\r\n                if (currentInput[fields].length > 0) {\r\n                    keeper_count += 1\r\n                }\r\n            }\r\n            if (keeper_count === keeper_fields.length){\r\n                return 1\r\n            }\r\n            else{\r\n                return 0\r\n            }\r\n        }\r\n        else {\r\n            let player_count = 0\r\n            for (let fields of player_fields) {\r\n                console.log(currentInput[fields])\r\n                if (currentInput[fields].length > 0) {\r\n                    player_count += 1\r\n                }\r\n            }\r\n            if (player_count === player_fields.length){\r\n                return 1\r\n            }\r\n            else{\r\n                return 0\r\n            }\r\n        }\r\n    }\r\n\r\n    // For every activity in the active row inputs, store the input values dynamically\r\n    storeInput = event => {\r\n        const {type, name, value} = event.target;\r\n        const currentInput = this.state.currentInput;\r\n        if (type === \"number\") {\r\n            if (value < 0) {\r\n                alert(\"Value cannot be less than 0\")\r\n                currentInput[name] = \"\";\r\n            } else {\r\n                currentInput[name] = value;\r\n            }\r\n            this.setState({\r\n                currentInput: currentInput\r\n            })\r\n        } else {\r\n            currentInput[name] = value\r\n            this.setState({\r\n                currentInput: currentInput\r\n            })\r\n        }\r\n    }\r\n\r\n    // Store Radio Input values\r\n    storeRadioInput = event => {\r\n        const {name, value} = event.target;\r\n        const currentInput = this.state.currentInput;\r\n        if (value === \"No\") {\r\n            currentInput[name] = \"Yes\";\r\n        } else {\r\n            currentInput[name] = \"No\";\r\n        }\r\n        this.setState({\r\n            currentInput: currentInput\r\n        })\r\n    }\r\n\r\n    checkDataValidity = () => {\r\n        const currentRow = this.state.currentInput\r\n        if (parseInt(currentRow.minutes_played) < 1 || parseInt(currentRow.minutes_played) > 120) {\r\n            alert(\"Minutes played cannot be less than 1 or more than 120\")\r\n            return false\r\n        }\r\n        if (parseInt(currentRow.accurate_passes) > parseInt(currentRow.passes)) {\r\n            alert(\"Accurate Passes cannot be more than no. of Passes\")\r\n            return false\r\n        }\r\n        if ((parseInt(currentRow.blocked_shots) > parseInt(currentRow.total_shots)) || (parseInt(currentRow.shot_on_target) > parseInt(currentRow.total_shots)) || (parseInt(currentRow.shot_off_target) > parseInt(currentRow.total_shots))) {\r\n            alert(\"No. of Blocked Shots, Shots On Target and Shots Off Target cannot be more than Total Shots\")\r\n            return false\r\n        }\r\n        if (parseInt(currentRow.accurate_long_balls) > parseInt(currentRow.long_balls)) {\r\n            alert(\"Accurate Long Balls cannot be more than no. of Long Balls\")\r\n            return false\r\n        }\r\n        if (parseInt(currentRow.dribbles_succeeded) > parseInt(currentRow.dribbles_attempted)) {\r\n            alert(\"Dribbles Succeeded cannot be more than Dribbles Attempted\")\r\n            return false\r\n        }\r\n        if (parseInt(currentRow.tackles_succeeded) > parseInt(currentRow.tackles_attempted)) {\r\n            alert(\"Tackles Succeeded cannot be more than Tackles Attempted\")\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    submitInput = () => {\r\n        if (this.checkDataValidity()) {\r\n            console.log(this.state)\r\n            this.setState((state, props) => {\r\n                const {rows, currentInput, role, allRowsDisabled, keeperRowsDisabled, responseMessage} = state;\r\n                const newState = {\r\n                    rows: [...rows, currentInput],\r\n                    currentInput: getInitialState(),\r\n                    role: \"\",\r\n                    allRowsDisabled: true,\r\n                    keeperRowsDisabled: true,\r\n                    responseMessage: responseMessage,\r\n                    loading: false\r\n                }\r\n                return newState;\r\n            });\r\n        }\r\n    }\r\n\r\n    removeCurrentInput = () => {\r\n        this.setState({\r\n            currentInput: getInitialState()\r\n        });\r\n    };\r\n\r\n    // To remove a row from the frozen data\r\n    handleRemoveRow = (idx) => {\r\n        console.log(idx)\r\n        var tempRows = [...this.state.rows]; // make a separate copy of the array\r\n        if (idx !== -1) {\r\n            tempRows.splice(idx, 1);\r\n            this.setState({rows: tempRows});\r\n        }\r\n    };\r\n\r\n    validRowsData = () => {\r\n        const {rows} = this.state;\r\n        return rows.length;\r\n    }\r\n\r\n    // For every activity in the active row inputs, store the input values dynamically\r\n    enableRows = event => {\r\n        const {name, value} = event.target;\r\n        let allRowsDisabledTemp, keeperRowsDisabledTemp;\r\n        if (value.length === 0) {\r\n            allRowsDisabledTemp = true;\r\n        } else if (value === \"Keeper\") {\r\n            allRowsDisabledTemp = false\r\n            keeperRowsDisabledTemp = false;\r\n        } else {\r\n            allRowsDisabledTemp = false\r\n            keeperRowsDisabledTemp = true;\r\n        }\r\n        const currentInput = this.state.currentInput;\r\n        currentInput['role'] = value;\r\n        this.setState((state, props) => {\r\n            const {rows, currentInputTemp, role, allRowsDisabled, keeperRowsDisabled, responseMessage} = state;\r\n            return {\r\n                rows: [...rows],\r\n                currentInput: currentInput,\r\n                role: value,\r\n                allRowsDisabled: allRowsDisabledTemp,\r\n                keeperRowsDisabled: keeperRowsDisabledTemp,\r\n                responseMessage: responseMessage\r\n            };\r\n        });\r\n    }\r\n\r\n    // // To set the response header message\r\n    // setResponseHeader = (msg) => {\r\n    //   console.log(this.state)\r\n    //   this.setState({\r\n    //     responseMessage: msg\r\n    //   })\r\n    // }\r\n\r\n    submitAll = () => {\r\n        if (!this.validRowsData()) {\r\n            alert(\"Please enter all data and click confirm when done\")\r\n            console.log(this.state)\r\n        } else {\r\n            console.log(this.state)\r\n            console.log(\"Sending request\")\r\n\r\n            // To convert Object to json\r\n            const body_data = JSON.stringify(this.state.rows)\r\n            console.log(body_data)\r\n\r\n            this.setState({\r\n                screenLoading: true\r\n            })\r\n\r\n            // To send a POST request to the Backend Server with the XML body\r\n            fetch('/getRating', {\r\n                method: \"POST\",\r\n                cache: \"no-cache\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: body_data\r\n            })\r\n                // On receiving response, check status code and display Response Header accordingly\r\n                .then(response => {\r\n                    if (response.status === 500) {\r\n                        throw new Error(\"SERVER_ERR_500 : CHECK SERVER CONNECTION\")\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(response => {\r\n                    this.setState(() => {\r\n                        return {\r\n                            rows: response,\r\n                            currentInput: getInitialState(),\r\n                            role: \"\",\r\n                            allRowsDisabled: true,\r\n                            keeperRowsDisabled: true,\r\n                            responseMessage: \"\",\r\n                            screenLoading: false,\r\n                            responseReceived: true\r\n                        };\r\n                    })\r\n                    console.log(response)\r\n                })\r\n                .catch((error) => {\r\n                    const error_message = error.message\r\n                    console.log(error_message)\r\n                    this.setState({\r\n                        screenLoading: false,\r\n                        responseMessage: error_message\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    resetScreen = () => {\r\n        // Reset the state\r\n        this.setState(() => {\r\n            return {\r\n                rows: [],\r\n                currentInput: getInitialState(),\r\n                role: \"\",\r\n                allRowsDisabled: true,\r\n                keeperRowsDisabled: true,\r\n                responseMessage: \"\",\r\n                screenLoading: false,\r\n                responseReceived: false\r\n            };\r\n        })\r\n    }\r\n\r\n    // render() method constantly monitors and renders automatically whenever a state variable is changed\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.screenLoading ? (\r\n                    <div align={'center'}\r\n                         style={{position: \"relative\", margin: \"auto\", paddingTop: \"220px\", fontSize: \"40px\"}}>\r\n                        Loading......Please Wait\r\n                        <ReactLoading type={\"spokes\"} color={\"black\"}/>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        {!this.state.responseReceived ? (\r\n                            <div>\r\n                                <DocumentHeader\r\n                                    value={\"Player Match Rating Predictor\"}\r\n                                />\r\n                                <table className=\"table table-striped\" id=\"players_match_data_request\"\r\n                                       style={{marginTop: \"62px\"}}>\r\n                                    <TableHeader\r\n                                        values={[\"Role\", \"Name\", \"Minutes Played\", \"Diving Saves\", \"Goals Conceded By Goalkeeper\", \"Punches\", \"Saves\", \"Saves Inside Box\",\r\n                                            \"Total Throws\", \"Passes\", \"Accurate Passes\", \"Assists\", \"Goals\", \"Chances Created\", \"Total Shots\", \"Blocked Shots\", \"Shots On Target\",\r\n                                            \"Shots Off Target\", \"Long Balls\", \"Accurate Long Balls\", \"Crosses\", \"Key Passes\", \"Touches\", \"Aerials Lost\", \"Aerials Won\", \"Clearances\",\r\n                                            \"Dispossessed\", \"Dribbles Attempted\", \"Dribbles Succeeded\", \"Duels Lost\", \"Duels Won\", \"Fouls\", \"Interceptions\", \"Recoveries\",\r\n                                            \"Tackles Attempted\", \"Tackles Succeeded\", \"Was Fouled\", \"Substituted\", \"Was a Substitute\", \"Yellow Card\", \"Red Card\", \"Rating\"]}\r\n                                    />\r\n                                    <tbody>\r\n                                    {this.state.rows.map((row, idx) => (\r\n                                        <tr key={idx} style={{background: \"#D9DBDC\"}}>\r\n                                            <RowItem value={row.role}/>\r\n                                            <RowItem value={row.name}/>\r\n                                            <RowItem value={row.minutes_played}/>\r\n                                            <RowItem value={row.diving_save}/>\r\n                                            <RowItem value={row.goals_conceded}/>\r\n                                            <RowItem value={row.punches}/>\r\n                                            <RowItem value={row.saves}/>\r\n                                            <RowItem value={row.saves_inside_box}/>\r\n                                            <RowItem value={row.total_throws}/>\r\n                                            <RowItem value={row.passes}/>\r\n                                            <RowItem value={row.accurate_passes}/>\r\n                                            <RowItem value={row.assists}/>\r\n                                            <RowItem value={row.goals}/>\r\n                                            <RowItem value={row.chances_created}/>\r\n                                            <RowItem value={row.total_shots}/>\r\n                                            <RowItem value={row.blocked_shots}/>\r\n                                            <RowItem value={row.shot_on_target}/>\r\n                                            <RowItem value={row.shot_off_target}/>\r\n                                            <RowItem value={row.long_balls}/>\r\n                                            <RowItem value={row.accurate_long_balls}/>\r\n                                            <RowItem value={row.crosses}/>\r\n                                            <RowItem value={row.key_passes}/>\r\n                                            <RowItem value={row.touches}/>\r\n                                            <RowItem value={row.aerials_lost}/>\r\n                                            <RowItem value={row.aerials_won}/>\r\n                                            <RowItem value={row.clearances}/>\r\n                                            <RowItem value={row.dispossessed}/>\r\n                                            <RowItem value={row.dribbles_attempted}/>\r\n                                            <RowItem value={row.dribbles_succeeded}/>\r\n                                            <RowItem value={row.duels_lost}/>\r\n                                            <RowItem value={row.duels_won}/>\r\n                                            <RowItem value={row.fouls}/>\r\n                                            <RowItem value={row.interceptions}/>\r\n                                            <RowItem value={row.recoveries}/>\r\n                                            <RowItem value={row.tackles_attempted}/>\r\n                                            <RowItem value={row.tackles_succeeded}/>\r\n                                            <RowItem value={row.was_fouled}/>\r\n                                            <RowItem value={row.was_subbed}/>\r\n                                            <RowItem value={row.is_a_sub}/>\r\n                                            <RowItem value={row.yellow_card}/>\r\n                                            <RowItem value={row.red_card}/>\r\n                                            <td/>\r\n                                            <td style={{textAlign: \"center\"}}>\r\n                                                <button onClick={() => {this.handleRemoveRow(idx)}}\r\n                                                        style={{fontSize: \"14px\", padding: \"2px\"}}>\r\n                                                    Clear\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                    <tr style={{background: \"#D9DBDC\"}}>\r\n                                        <RoleInput\r\n                                            name=\"role\"\r\n                                            value={this.state.role}\r\n                                            onChange={this.enableRows}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            value={this.state.currentInput.name}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={200}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"minutes_played\"\r\n                                            value={this.state.currentInput.minutes_played}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"diving_save\"\r\n                                            value={this.state.currentInput.diving_save}\r\n                                            disabled={(this.state.allRowsDisabled || this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"goals_conceded\"\r\n                                            value={this.state.currentInput.goals_conceded}\r\n                                            disabled={(this.state.allRowsDisabled || this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={100}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"punches\"\r\n                                            value={this.state.currentInput.punches}\r\n                                            disabled={(this.state.allRowsDisabled || this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"saves\"\r\n                                            value={this.state.currentInput.saves}\r\n                                            disabled={(this.state.allRowsDisabled || this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"saves_inside_box\"\r\n                                            value={this.state.currentInput.saves_inside_box}\r\n                                            disabled={(this.state.allRowsDisabled || this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"total_throws\"\r\n                                            value={this.state.currentInput.total_throws}\r\n                                            disabled={(this.state.allRowsDisabled || this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"passes\"\r\n                                            value={this.state.currentInput.passes}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"accurate_passes\"\r\n                                            value={this.state.currentInput.accurate_passes}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"assists\"\r\n                                            value={this.state.currentInput.assists}\r\n                                            disabled={(this.state.allRowsDisabled || !this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"goals\"\r\n                                            value={this.state.currentInput.goals}\r\n                                            disabled={(this.state.allRowsDisabled || !this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"chances_created\"\r\n                                            value={this.state.currentInput.chances_created}\r\n                                            disabled={(this.state.allRowsDisabled || !this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"total_shots\"\r\n                                            value={this.state.currentInput.total_shots}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"blocked_shots\"\r\n                                            value={this.state.currentInput.blocked_shots}\r\n                                            disabled={(this.state.allRowsDisabled || !this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"shot_on_target\"\r\n                                            value={this.state.currentInput.shot_on_target}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"shot_off_target\"\r\n                                            value={this.state.currentInput.shot_off_target}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"long_balls\"\r\n                                            value={this.state.currentInput.long_balls}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"accurate_long_balls\"\r\n                                            value={this.state.currentInput.accurate_long_balls}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"crosses\"\r\n                                            value={this.state.currentInput.crosses}\r\n                                            disabled={(this.state.allRowsDisabled || !this.state.keeperRowsDisabled)}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"key_passes\"\r\n                                            value={this.state.currentInput.key_passes}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"touches\"\r\n                                            value={this.state.currentInput.touches}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"aerials_lost\"\r\n                                            value={this.state.currentInput.aerials_lost}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"aerials_won\"\r\n                                            value={this.state.currentInput.aerials_won}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"clearances\"\r\n                                            value={this.state.currentInput.clearances}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"dispossessed\"\r\n                                            value={this.state.currentInput.dispossessed}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={100}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"dribbles_attempted\"\r\n                                            value={this.state.currentInput.dribbles_attempted}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={100}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"dribbles_succeeded\"\r\n                                            value={this.state.currentInput.dribbles_succeeded}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={100}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"duels_lost\"\r\n                                            value={this.state.currentInput.duels_lost}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"duels_won\"\r\n                                            value={this.state.currentInput.duels_won}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"fouls\"\r\n                                            value={this.state.currentInput.fouls}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={70}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"interceptions\"\r\n                                            value={this.state.currentInput.interceptions}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={100}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"recoveries\"\r\n                                            value={this.state.currentInput.recoveries}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={90}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"tackles_attempted\"\r\n                                            value={this.state.currentInput.tackles_attempted}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={90}\r\n                                            min={\"0\"}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"tackles_succeeded\"\r\n                                            value={this.state.currentInput.tackles_succeeded}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={90}\r\n                                            min={0}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"number\"\r\n                                            name=\"was_fouled\"\r\n                                            value={this.state.currentInput.was_fouled}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onChange={this.storeInput}\r\n                                            width={80}\r\n                                            min={0}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"radio\"\r\n                                            name=\"was_subbed\"\r\n                                            value={this.state.currentInput.was_subbed}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onClick={this.storeRadioInput}\r\n                                            width={100}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"radio\"\r\n                                            name=\"is_a_sub\"\r\n                                            value={this.state.currentInput.is_a_sub}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onClick={this.storeRadioInput}\r\n                                            width={70}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"radio\"\r\n                                            name=\"yellow_card\"\r\n                                            value={this.state.currentInput.yellow_card}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onClick={this.storeRadioInput}\r\n                                            width={70}\r\n                                        />\r\n                                        <RowInput\r\n                                            type=\"radio\"\r\n                                            name=\"red_card\"\r\n                                            value={this.state.currentInput.red_card}\r\n                                            disabled={this.state.allRowsDisabled}\r\n                                            onClick={this.storeRadioInput}\r\n                                            width={70}\r\n                                        />\r\n                                        <td>\r\n\r\n                                        </td>\r\n                                        <td style={{textAlign: \"center\"}}>\r\n                                            {this.validInput() ? (\r\n                                                <button onClick={this.submitInput}\r\n                                                        style={{fontSize: \"14px\", padding: \"2px\"}}>\r\n                                                    Confirm\r\n                                                </button>) : (\r\n                                                <button onClick={this.removeCurrentInput}\r\n                                                        style={{fontSize: \"14px\", padding: \"2px\"}}>\r\n                                                    Clear\r\n                                                </button>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <div style={{bottom: \"55px\", position: \"absolute\"}}>\r\n                                    <button\r\n                                        onClick={this.submitAll}\r\n                                        className=\"submit\"\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            background: \"#0B273F\",\r\n                                            color: \"white\",\r\n                                            cursor: \"pointer\",\r\n                                            border: \"none\",\r\n                                            height: \"50px\",\r\n                                            padding: \"8px 8px\",\r\n                                            boxSizing: \"border-box\",\r\n                                            alignContent: 'left',\r\n                                            position: \"fixed\",\r\n                                            fontSize: \"16px\"\r\n                                        }}>\r\n                                        Get Ratings\r\n                                    </button>\r\n                                </div>\r\n                            </div>) : (\r\n                            <div>\r\n                                <DocumentHeader\r\n                                    value={\"Football Players Data\"}\r\n                                />\r\n                                <table className=\"table table-striped\" id=\"players_match_data_response\"\r\n                                       style={{paddingTop: \"62px\"}}>\r\n                                    <TableHeader\r\n                                        values={[\"Role\", \"Name\", \"Minutes Played\", \"Diving Saves\", \"Goals Conceded By Goalkeeper\", \"Punches\", \"Saves\", \"Saves Inside Box\",\r\n                                            \"Total Throws\", \"Passes\", \"Accurate Passes\", \"Assists\", \"Goals\", \"Chances Created\", \"Total Shots\", \"Blocked Shots\", \"Shots On Target\",\r\n                                            \"Shots Off Target\", \"Long Balls\", \"Accurate Long Balls\", \"Crosses\", \"Key Passes\", \"Touches\", \"Aerials Lost\", \"Aerials Won\", \"Clearances\",\r\n                                            \"Dispossessed\", \"Dribbles Attempted\", \"Dribbles Succeeded\", \"Duels Lost\", \"Duels Won\", \"Fouls\", \"Interceptions\", \"Recoveries\",\r\n                                            \"Tackles Attempted\", \"Tackles Succeeded\", \"Was Fouled\", \"Substituted\", \"Was a Substitute\", \"Yellow Card\", \"Red Card\", \"Rating\"]}\r\n                                    />\r\n                                    <tbody>\r\n                                    {this.state.rows.map((row, idx) => (\r\n                                        <tr key={idx} style={{background: \"#D9DBDC\"}}>\r\n                                            <RowItem value={row.role}/>\r\n                                            <RowItem value={row.name}/>\r\n                                            <RowItem value={row.minutes_played}/>\r\n                                            <RowItem value={row.diving_save}/>\r\n                                            <RowItem value={row.goals_conceded}/>\r\n                                            <RowItem value={row.punches}/>\r\n                                            <RowItem value={row.saves}/>\r\n                                            <RowItem value={row.saves_inside_box}/>\r\n                                            <RowItem value={row.total_throws}/>\r\n                                            <RowItem value={row.passes}/>\r\n                                            <RowItem value={row.accurate_passes}/>\r\n                                            <RowItem value={row.assists}/>\r\n                                            <RowItem value={row.goals}/>\r\n                                            <RowItem value={row.chances_created}/>\r\n                                            <RowItem value={row.total_shots}/>\r\n                                            <RowItem value={row.blocked_shots}/>\r\n                                            <RowItem value={row.shot_on_target}/>\r\n                                            <RowItem value={row.shot_off_target}/>\r\n                                            <RowItem value={row.long_balls}/>\r\n                                            <RowItem value={row.accurate_long_balls}/>\r\n                                            <RowItem value={row.crosses}/>\r\n                                            <RowItem value={row.key_passes}/>\r\n                                            <RowItem value={row.touches}/>\r\n                                            <RowItem value={row.aerials_lost}/>\r\n                                            <RowItem value={row.aerials_won}/>\r\n                                            <RowItem value={row.clearances}/>\r\n                                            <RowItem value={row.dispossessed}/>\r\n                                            <RowItem value={row.dribbles_attempted}/>\r\n                                            <RowItem value={row.dribbles_succeeded}/>\r\n                                            <RowItem value={row.duels_lost}/>\r\n                                            <RowItem value={row.duels_won}/>\r\n                                            <RowItem value={row.fouls}/>\r\n                                            <RowItem value={row.interceptions}/>\r\n                                            <RowItem value={row.recoveries}/>\r\n                                            <RowItem value={row.tackles_attempted}/>\r\n                                            <RowItem value={row.tackles_succeeded}/>\r\n                                            <RowItem value={row.was_fouled}/>\r\n                                            <RowItem value={row.was_subbed}/>\r\n                                            <RowItem value={row.is_a_sub}/>\r\n                                            <RowItem value={row.yellow_card}/>\r\n                                            <RowItem value={row.red_card}/>\r\n                                            <RowItem value={row.rating}/>\r\n                                        </tr>\r\n                                    ))}\r\n                                    </tbody>\r\n                                </table>\r\n                                <div style={{bottom: \"55px\", position: \"absolute\"}}>\r\n                                    <button\r\n                                        onClick={this.resetScreen}\r\n                                        className=\"submit\"\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            background: \"#0B273F\",\r\n                                            color: \"white\",\r\n                                            cursor: \"pointer\",\r\n                                            border: \"none\",\r\n                                            height: \"50px\",\r\n                                            padding: \"8px 8px\",\r\n                                            boxSizing: \"border-box\",\r\n                                            alignContent: 'left',\r\n                                            position: \"fixed\",\r\n                                            fontSize: \"16px\"\r\n                                        }}>\r\n                                        Enter New Data\r\n                                    </button>\r\n                                </div>\r\n                            </div>)}\r\n                        <ResponseMessage\r\n                            value={this.state.responseMessage}/>\r\n                    </div>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}